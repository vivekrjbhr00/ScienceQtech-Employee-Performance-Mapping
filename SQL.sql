CREATE DATABASE employee;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT AS Department
FROM emp_table;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT AS Department, EMP_RATING
FROM emp_table
WHERE EMP_RATING < 2;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT AS Department, EMP_RATING
FROM emp_table
WHERE EMP_RATING > 4;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT AS Department, EMP_RATING
FROM emp_table
WHERE EMP_RATING BETWEEN 2 AND 4;

SELECT CONCAT(FIRST_NAME, LAST_NAME) AS NAME
FROM emp_table
WHERE DEPT='Finance';

SELECT emp_table.EMP_ID, emp_table.FIRST_NAME, emp_table.LAST_NAME,emp_table.ROLE
FROM emp_table
LEFT JOIN ds_team 
ON  emp_table.EMP_ID = ds_team.EMP_ID
ORDER BY EMP_ID ASC;


SELECT e.EMP_ID,e.FIRST_NAME,e.LAST_NAME,e.ROLE,COUNT(r.EMP_ID) AS num_reporters
FROM emp_table e
INNER JOIN emp_table r ON e.EMP_ID = r.MANAGER_ID
GROUP BY e.EMP_ID,e.FIRST_NAME,e.LAST_NAME,e.ROLE
HAVING COUNT(r.EMP_ID)
ORDER BY num_reporters DESC;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, DEPT AS Department
FROM emp_table
WHERE DEPT ='Healthcare'
UNION
SELECT EMP_ID, FIRST_NAME, LAST_NAME, DEPT AS Department
FROM emp_table
WHERE DEPT ='Finance';
 
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT AS Department, EMP_RATING ,MAX(EMP_RATING)
OVER(PARTITION BY DEPT) AS Max_Rating
FROM emp_table
ORDER BY DEPT;

SELECT ROLE, MIN(SALARY), MAX(SALARY)
FROM emp_table
GROUP BY ROLE
ORDER BY MAX(SALARY) DESC;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, EXP,
	RANK() OVER(ORDER BY EXP DESC) EXP_RANK
FROM emp_table;

CREATE VIEW high_salary_employees_view AS
SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT, EXP, COUNTRY, SALARY
FROM emp_table
WHERE SALARY > 6000;

SELECT *
FROM high_salary_employees_view;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, EXP
FROM emp_table
WHERE EXP > (SELECT 10)
ORDER BY EXP DESC;

DELIMITER //
CREATE PROCEDURE ExpDetails()
BEGIN
    SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT, EXP, COUNTRY, SALARY
    FROM emp_table
    WHERE EXP > 3;
END//

CALL ExpDetails;


DELIMITER //
CREATE FUNCTION Emp_Role( EXP INT)
RETURNS VARCHAR(40)
DETERMINISTIC
BEGIN
DECLARE Emp_Role VARCHAR(40);
IF EXP > 12 AND 16 THEN 
SET Emp_Role='MANAGER';
ELSEIF EXP > 10 AND 12 THEN
SET Emp_Role='LEAD DATA SCIENTIST';
ELSEIF EXP > 5 AND 10 THEN
SET Emp_Role='SENIOR DATA SCIENTIST';
ELSEIF EXP > 2 AND 5 THEN
SET Emp_Role='ASSOCIATE DATA SCIENTIST';
ELSEIF EXP <= 2 THEN
SET Emp_Role='JUNIOR DATA SCIENTIST';
END IF;
RETURN(Emp_Role);
END //

DELIMITER ;

SELECT EXP,Emp_Role(EXP)
FROM ds_team;


CREATE INDEX idx_firstname ON emp_table(FIRST_NAME(20));

SELECT * FROM emp_table
WHERE FIRST_NAME='Eric';


SELECT EMP_ID, FIRST_NAME, LAST_NAME, SALARY, EMP_RATING, 0.05 * SALARY * EMP_RATING AS Bonus
FROM emp_table;

SELECT EMP_ID,FIRST_NAME,LAST_NAME,SALARY,COUNTRY,CONTINENT,
AVG(salary)OVER(PARTITION BY COUNTRY)AVG_salary_IN_COUNTRY,
AVG(salary)OVER(PARTITION BY CONTINENT)AVG_salary_IN_CONTINENT,
COUNT(*)OVER(PARTITION BY COUNTRY)COUNT_IN_COUNTRY,
COUNT(*)OVER(PARTITION BY CONTINENT)COUNT_IN_CONTINENT
FROM emp_table;